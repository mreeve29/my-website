---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import FormattedDate from "../../../components/FormattedDate.astro";
import Tile from "../../../components/Tile.astro";

export async function getStaticPaths() {
    const posts = await getCollection("blog");
    return posts.map((post) => ({
        params: { slug: post.slug },
        props: post,
    }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;

let tags = "";
post.data.tags.forEach((tag) => tags += tag + ',');

tags = tags.substring(0, tags.length - 1);

const { Content } = await post.render();
---

<Layout title=`${post.data.title} - Michael Reeve` activePath="blog">
    <main
        class="mx-auto max-w-2xl p-5 break-words leading-normal text-left font-Grotesk"
    >
        <div class="mb-3">
            {
                <img
                        width={720}
                        height={360}
                        src={post.data.cover.src}
                        alt={post.data.coverAlt}
                    />
            }
            <h1 class="mt-3 mb-2 font-sans font-bold text-4xl">{post.data.title}</h1>
            <FormattedDate date={post.data.pubDate} />
            {
                post.data.updatedDate && (
                    <div class="last-updated-on">
                        Last updated on <FormattedDate date={post.data.updatedDate} />
                    </div>
                )
            }

            <div class="flex mt-2">
                {post.data.tags.map((tag) => (<Tile>{tag}</Tile>))}
                <!-- <Tile>{tags}</Tile> -->
            </div>

            <hr class="h-px my-4 bg-gray-300 border-0" />
        </div>
        <article class="prose prose-invert prose-md prose-table:text-white prose-p:text-white">
            <Content/>
        </article>
    </main>
    
</Layout>

