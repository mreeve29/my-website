---
import Box from "./Box.astro";
import Tile from "./Tile.astro";

export interface Job {
    company: string;
    shortCompany: string;
    link: string;
    title: string;
    startDate: string;
    endDate: string;
    location: string;
    icon: string;
    description: string[];
    keywords: string[];
}

const { experiences, select } = Astro.props;

let selectedJobs = experiences as Job[];

if (select){
    selectedJobs = selectedJobs.filter((j : Job, i: number) => select.includes(i));
}
---
<div class="flex flex-col sm:flex-row">
    <div class="w-full">
        {
            selectedJobs.map((j: Job) => (
                <Box>
                    <div class="text-lg md:text-xl lg:text-2xl w-full">
                        <span class="font-bold">{j.title}</span> at{" "}
                        <a
                            href={j.link}
                            class="underline decoration-sky-500 hover:decoration-black dark:hover:decoration-white transition-all"
                        >
                            {j.company}
                        </a>
                    </div>
                    <div>
                        {j.startDate !== j.endDate
                            ? `${j.startDate} - ${j.endDate}`
                            : j.startDate}
                    </div>
                    <ul class="list-disc list-outside pl-6">
                        {j.description.map((line) => (
                            <li class="mb-2">{line}</li>
                        ))}
                    </ul>
                    <div class="flex flex-row flex-wrap my-1">
                        {j.keywords.map((str: String) => (
                            <Tile>{str}</Tile>
                        ))}
                    </div>
                </Box>
            ))
        }
    </div>
</div>
